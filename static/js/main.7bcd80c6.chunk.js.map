{"version":3,"sources":["components/common/characters/CharacterItem.js","components/common/Spinner.js","components/common/characters/CharacterGrid.js","components/common/SelectInput.js","components/home/HomePage.js","components/about/AboutPage.js","components/common/Header.js","components/common/Footer.js","components/PageNotFound.js","api/apiUtils.js","api/cardApi.js","redux/actions/cardActions.js","redux/actions/apiStatusActions.js","redux/actions/actionTypes.js","components/common/TextInput.js","components/cards/CardForm.js","components/cards/ManageCardPage.js","components/cards/CardList.js","components/cards/CardPage.js","api/groupApi.js","redux/actions/groupActions.js","components/groups/GroupList.js","components/groups/GroupsPage.js","components/groups/GroupForm.js","components/groups/ManageGroupPage.js","components/cardview/cardview.js","components/Callback.js","components/App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/apiStatusReducer.js","redux/reducers/index.js","redux/reducers/groupReducer.js","redux/reducers/cardReducer.js","index.js","redux/configureStore.js","img/card-img.jpg","img/logo3.png"],"names":["CharacterItem","item","console","log","React","useState","useSpeechSynthesis","speak","cancel","play","className","style","height","name","description","meaning","to","id","href","CardImg","download","code","onClick","text","Spinner","margin","display","CharacterGrid","items","isLoading","map","key","char_id","SelectInput","label","onChange","defaultOption","error","value","options","for","option","HomePage","setItems","fullListItems","setFullListItems","groups","setGroups","setIsLoading","query","setQuery","useEffect","data","cards","noValidate","g","event","target","filter","x","includes","type","placeholder","e","role","data-toggle","aria-controls","aria-selected","v","toLowerCase","indexOf","val","i","AboutPage","Component","Header","activeStyle","color","src","LogoImg","alt","width","data-target","aria-expanded","aria-label","activestyle","Footer","Date","getFullYear","PageNotFound","handleResponse","response","a","ok","json","status","Error","handleError","baseUrl","process","REACT_APP_API_URL","loadCards","dispatch","fetch","then","catch","loadCardSuccess","deleteCard","card","deleteCardOptimistic","cardId","method","TextInput","wrapperClass","length","htmlFor","CardForm","onSave","saving","errors","startDate","setStartDate","expireDate","onSubmit","url","marginTop","selected","date","dateFormat","disabled","newCard","mapDispatchToProps","saveCard","getState","headers","body","JSON","stringify","cardApi","savedCard","updateCardSuccess","createCardSuccess","connect","state","ownProps","match","params","find","getCardById","history","props","setCard","setErrors","setSaving","alert","prevCard","preventDefault","Object","keys","formIsValid","toast","success","push","message","CardList","onDeleteClick","prototype","PropTypes","array","isRequired","func","CardPage","redirectToAddCardPage","handleDeleteCard","actions","autoClose","this","loading","marginBottom","setState","apiCallsInProgress","bindActionCreators","cardActions","loadGroups","loadGroupSuccess","deleteGroup","group","deleteGroupOptimistic","groupId","GroupList","isActive","GroupsPage","redirectToAddGroupPage","handleDeleteGroup","cardSelected","groupActions","GroupForm","paddingTop","selectedValues","onSelect","displayValue","showCheckbox","closeIcon","closeOnSelect","checked","newGroup","saveGroup","groupApi","savedGroup","updateGroupSuccess","createGroupSuccess","getGroupBySlug","setGroup","prevGroup","CardView","useParams","Callback","test","location","hash","auth","handleAuthentication","App","exact","path","component","render","ManageGroupPage","ManageCardPage","hideProgressBar","Boolean","window","hostname","actionTypeEndsInSuccess","substring","rootReducer","combineReducers","initialState","action","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7bcd80c6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport CardImg from \"../../../img/card-img.jpg\";\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\n\r\nconst CharacterItem = ({ item }) => {\r\n    console.log(item);\r\n    const [value, setValue] = React.useState(\"\");\r\n    const { speak, cancel } = useSpeechSynthesis();\r\n    const [play, stop] = React.useState(true);\r\n    const handleChange = () => {\r\n        speak({ text: item.meaning })\r\n\r\n        return play ?? !play;\r\n    };\r\n    return (\r\n        <div className=\"col-xl-3 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n            <div className=\"card card-figure has-hoverable\">\r\n                <figure className=\"figure\">\r\n                    <div className=\"figure-img\">\r\n                        <div style={{ height: '10vw' }}>\r\n                            <h6 className=\"figure-title\"> {item.name} </h6>\r\n                            <p className=\"text-muted mb-0\">\r\n                                <small> {item.description}\r\n                                </small> <br /><br />\r\n                                <small> <b> Meaning </b> - <br /> {item.meaning}\r\n                                </small>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"figure-action\">\r\n                            <Link to={`/cardview/` + item.id} className=\"btn btn-block btn-sm btn-primary\" >Details</Link>\r\n                        </div>\r\n                    </div>\r\n                    <figcaption className=\"figure-caption\">\r\n                        <ul className=\"list-inline d-flex text-muted mb-0\">\r\n\r\n                            <li className=\"list-inline-item text-truncate mr-auto\">\r\n                                <a href={CardImg} download> <span className=\"badge badge-info\">{item.code}</span></a>\r\n                            </li>\r\n                            {/* <li className=\"list-inline-item \">\r\n                                <a href=\"#\"> <span><i\r\n                                    className=\"fa fa-star \"></i></span></a>\r\n                            </li>\r\n                            <li className=\"list-inline-item\">\r\n\r\n                                <a href={`mailto:?subject=Bookmark Dashboard: sharing '${item.name}'&body=Hello,%0D%0A%0D%0AI would like to share this url with you:\r\n                                        ${window.location.protocol + \"//\" + window.location.host + \"/cardview/\" + item.id} \r\n                                        ${item.expireDate ? \"which will be expire before\" + item.expireDate : \"\"} %0D%0A%0D%0A Regards,`} className=\"fa fa-share-alt\" >&nbsp;</a>\r\n                            </li> */}\r\n                            {/* <li className=\"list-inline-item\">\r\n                                <a href={CardImg} download> <span><i\r\n                                    className=\"fa fa-download \"></i></span></a>\r\n                            </li> */}\r\n\r\n                            <li className=\"list-inline-item\">\r\n                                <a href=\"#\" onClick={() => handleChange()}>\r\n                                    <span><i\r\n                                        className={play ? \"fa fa-play\" : \"fa fa-stop-circle-o\"}></i></span>\r\n                                </a>\r\n                            </li>\r\n\r\n                            <li className=\"list-inline-item\">\r\n                                <a href=\"#\" onClick={cancel}>\r\n                                    <span><i className=\"fa fa-stop-circle-o\"></i></span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </figcaption>\r\n                </figure>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterItem\r\n","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n       \r\n        <span className=\"dashboard-spinner spinner-secondary spinner-xxl\" \r\n        style={{  margin: 'auto', display: 'block' }}></span>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport CharacterItem from './CharacterItem'\r\nimport Spinner from '../Spinner'\r\n\r\nconst CharacterGrid = ({ items, isLoading }) => {\r\n  return isLoading ? (\r\n\r\n    <Spinner />\r\n  ) : (\r\n      <>\r\n        {items.map((item) => (\r\n          <CharacterItem key={item.char_id} item={item}></CharacterItem>\r\n        ))}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default CharacterGrid\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectInput = ({\r\n  name,\r\n  label,\r\n  onChange,\r\n  defaultOption,\r\n  value,\r\n  error,\r\n  options\r\n}) => {\r\n  return (\r\n    <>\r\n      <label for=\"validationCustom01\">{label}</label>\r\n      <select\r\n        name={name}\r\n        // value={value}\r\n        onChange={onChange}\r\n        className=\"form-control\">\r\n        <option value=\"\">{defaultOption}</option>\r\n        {\r\n          options.map(option => {\r\n            return (\r\n              <option key={option.value} value={option.value}>\r\n                {option.text}\r\n              </option>\r\n            );\r\n          })\r\n        }\r\n      </select >\r\n      { error && <div className=\"valid-feedback\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  error: PropTypes.string,\r\n  options: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default SelectInput;\r\n","import React, { useState, useEffect } from 'react'\r\nimport CharacterGrid from \"../common/characters/CharacterGrid\";\r\nimport axios from 'axios'\r\nimport SelectInput from \"../common/SelectInput\";\r\nimport data from \"../bg-data.json\";\r\nconst HomePage = () => {\r\n\r\n    const [items, setItems] = useState([])\r\n    const [fullListItems, setFullListItems] = useState([])\r\n    const [groups, setGroups] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [query, setQuery] = useState('')\r\n\r\n    useEffect(() => {\r\n        // const fetchItems = async () => {\r\n        {\r\n            setIsLoading(true)\r\n\r\n            setItems(data.cards)\r\n            setFullListItems(data.cards)\r\n            setGroups(data.groups)\r\n\r\n            setIsLoading(false)\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        const g = groups.filter(g => g.id === +value).map(x => x.cards);\r\n\r\n        value ?\r\n            setItems(\r\n                fullListItems.filter((x) => g[0].includes(x.id))\r\n            ) : setItems(\r\n                fullListItems\r\n            );\r\n\r\n        // setItems(prevCard => ({\r\n        //     ...prevCard,\r\n        //     [items]: itemFilter\r\n        // }));\r\n    }\r\n\r\n    function handleChange2(event) {\r\n        debugger;\r\n        const { name, value } = event.target;\r\n\r\n        value ?\r\n            setItems(\r\n                fullListItems.filter((x) => value)\r\n            ) : setItems(\r\n                fullListItems\r\n            );\r\n\r\n        // setItems(prevCard => ({\r\n        //     ...prevCard,\r\n        //     [items]: itemFilter\r\n        // }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-wrapper\">\r\n            <div className=\"container-fluid dashboard-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">Cards </h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <form className=\"needs-validation\" noValidate>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12 mb-2\">\r\n                                                    <SelectInput\r\n                                                        name=\"solutionId\"\r\n                                                        label=\"Solution\"\r\n                                                        defaultOption=\"Choose solution to your problem\"\r\n                                                        value={groups.id || \"\"}\r\n                                                        options={groups.map(g => ({\r\n                                                            value: g.id,\r\n                                                            text: g.name\r\n                                                        }))}\r\n                                                        onChange={handleChange}\r\n                                                    // error={errors.author}\r\n                                                    />\r\n\r\n                                                </div>\r\n                                                <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12 mb-2\">\r\n                                                    <label for=\"validationCustom02\">Search</label>\r\n                                                    {/* <input type=\"text\" className=\"form-control\" id=\"validationCustom02\" placeholder=\"Search verses | sloka | keyword\" /> */}\r\n\r\n\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control \"\r\n                                                        placeholder=\"Search verses | sloka | keyword\"\r\n                                                        // onChange={handleChange2}\r\n                                                        onChange={e => setQuery(e.target.value)}\r\n                                                        value={query}\r\n                                                    />\r\n\r\n\r\n                                                    {/* <div className=\"valid-feedback\">\r\n                                                        Looks good!\r\n                                                    </div> */}\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-10 col-lg-10 col-md-10 col-sm-10 col-10\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <div className=\"pills-regular\">\r\n                                        <ul className=\"nav nav-pills mb-1\" id=\"pills-tab\" role=\"tablist\">\r\n                                            <li className=\"nav-item\">\r\n                                                <a className=\"nav-link active\" id=\"pills-home-tab\" data-toggle=\"pill\" href=\"#all\" role=\"tab\" aria-controls=\"all\" aria-selected=\"true\">All</a>\r\n                                            </li>\r\n                                            <li className=\"nav-item\">\r\n                                                <a className=\"nav-link\" id=\"pills-profile-tab\" data-toggle=\"pill\" href=\"#memorization\" role=\"tab\" aria-controls=\"memorization\" aria-selected=\"false\">For memorization <span className=\"badge badge-primary badge-pill\">101</span></a>\r\n                                            </li>\r\n                                            <li className=\"nav-item\">\r\n                                                <a className=\"nav-link\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"#favorite\" role=\"tab\" aria-controls=\"favorite\" aria-selected=\"false\">My favorite <span className=\"badge badge-primary badge-pill\">0</span></a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <CharacterGrid isLoading={isLoading}\r\n                                items={items\r\n                                    .filter(v => {\r\n                                    if (v.name.toLowerCase().indexOf(query) >= 0\r\n                                        || v.description.toLowerCase().indexOf(query) >= 0\r\n                                        || v.meaning.toLowerCase().indexOf(query) >= 0\r\n                                        || v.code.toLowerCase().indexOf(query) >= 0\r\n                                    ) {\r\n                                        return true;\r\n                                    }\r\n                                    return false;\r\n                                })\r\n                                .filter((val,i)=>i<108)\r\n                            \r\n                            }\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react'\r\n\r\nclass AboutPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard-wrapper\">\r\n                <div className=\"container-fluid dashboard-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title text-center\">About us </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {/* <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h3  >Application is created mainly to help you based on problem you are looking for, choose your problem based on it related slokas will be displayed on screen</h3>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h3 >Any suggestion or improvement please drop mail <a href=\"mailto:amit.naik8103@gmail.com\">amit.naik8103@gmail.com</a></h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutPage;","import React, { Component } from 'react'\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport LogoImg from \"../../img/logo3.png\";\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        const activeStyle = { color: \"#F15B2A\" };\r\n        // const { login, logout, userHasScopes } = this.props.auth;\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg bg-white fixed-top\">\r\n                <Link to=\"/\" className=\"navbar-brand\" >Bhagavad Gita</Link>\r\n                <img className=\"img-fluid\" src={LogoImg} alt=\"card-img\" height={20} width={40} />\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto navbar-right-top\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\" activestyle={activeStyle}>Home</Link>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link to=\"/cards\" className=\"nav-link\" activestyle={activeStyle}>Cards</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/groups\" className=\"nav-link\" activestyle={activeStyle}>Groups</Link>\r\n                        </li> */}\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\" activestyle={activeStyle}>About</Link>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link onClick={isAuthenticated() ? logout : login} className=\"nav-link\" activestyle={activeStyle}>  {isAuthenticated() ? \"Log Out\" : \"Log In\"}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                            Copyright © {(new Date().getFullYear())} <a href=\"http://codewithamit.com\">Codewithamit.com</a>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 text-right\">\r\n                            Powered by Code with amit\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst PageNotFound = () => <h1>Oops! Page not found</h1>;\r\n\r\nexport default PageNotFound;\r\n\r\n\r\n\r\n\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/cards/\";\r\n\r\nexport function getCards() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveCard(card) {\r\n  return fetch(baseUrl + (card.id || \"\"), {\r\n    method: card.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(card)\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteCard(cardId) {\r\n  return fetch(baseUrl + cardId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport * as cardApi from \"../../api/cardApi\";\r\nimport { beginApiCall, apiCallError } from \"./apiStatusActions\";\r\n\r\nexport function loadCardSuccess(cards) {\r\n    return { type: types.LOAD_CARDS_SUCCESS, cards }\r\n}\r\n\r\nexport function createCardSuccess(card) {\r\n    return { type: types.CREATE_CARD_SUCCESS, card };\r\n}\r\n\r\nexport function updateCardSuccess(card) {\r\n    return { type: types.UPDATE_CARD_SUCCESS, card };\r\n}\r\n\r\nexport function deleteCardOptimistic(card) {\r\n    return { type: types.DELETE_CARD_OPTIMISTIC, card };\r\n}\r\n\r\nexport function loadCards() {\r\n    return function (dispatch) {\r\n        dispatch(beginApiCall());\r\n        return cardApi\r\n            .getCards()\r\n            .then(cards => {\r\n                dispatch(loadCardSuccess(cards));\r\n            })\r\n            .catch(error => {\r\n                dispatch(apiCallError(error));\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n\r\nexport function saveCard(card) {\r\n    //eslint-disable-next-line no-unused-vars\r\n    return function (dispatch, getState) {\r\n        dispatch(beginApiCall());\r\n        return cardApi\r\n            .saveCard(card)\r\n            .then(savedCard => {\r\n                card.id\r\n                    ? dispatch(updateCardSuccess(savedCard))\r\n                    : dispatch(createCardSuccess(savedCard));\r\n            })\r\n            .catch(error => {\r\n                dispatch(apiCallError(error));\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n\r\n\r\nexport function deleteCard(card) {\r\n    return function (dispatch) {\r\n        dispatch(deleteCardOptimistic(card));\r\n        return cardApi.deleteCard(card.id);\r\n    };\r\n}","import * as types from \"./actionTypes\";\r\n\r\nexport function beginApiCall() {\r\n    return { type: types.BEGIN_API_CALL };\r\n}\r\n\r\nexport function apiCallError() {\r\n    return { type: types.API_CALL_ERROR };\r\n}\r\n","\r\n\r\n// groups\r\nexport const LOAD_GROUPS_SUCCESS = \"LOAD_GROUPS_SUCCESS\";\r\nexport const CREATE_GROUP_SUCCESS = \"CREATE_GROUP_SUCCESS\";\r\nexport const UPDATE_GROUP_SUCCESS = \"UPDATE_GROUP_SUCCESS\";\r\n\r\nexport const LOAD_WEATHERS_SUCCESS = \"LOAD_WEATHERS_SUCCESS\";\r\nexport const CREATE_WEATHER_SUCCESS = \"CREATE_WEATHER_SUCCESS\";\r\nexport const UPDATE_WEATHER_SUCCESS = \"UPDATE_WEATHER_SUCCESS\";\r\n\r\nexport const LOAD_CARDS_SUCCESS = \"LOAD_CARDS_SUCCESS\";\r\nexport const CREATE_CARD_SUCCESS = \"CREATE_CARD_SUCCESS\";\r\nexport const UPDATE_CARD_SUCCESS = \"UPDATE_CARD_SUCCESS\";\r\n\r\nexport const BEGIN_API_CALL = \"BEGIN_API_CALL\";\r\nexport const API_CALL_ERROR = \"API_CALL_ERROR\";\r\n\r\nexport const DELETE_COURSE_OPTIMISTIC = \"DELETE_COURSE_OPTIMISTIC\";\r\nexport const DELETE_WEATHER_OPTIMISTIC = \"DELETE_WEATHER_OPTIMISTIC\";\r\nexport const DELETE_CARD_OPTIMISTIC = \"DELETE_CARD_OPTIMISTIC\";\r\nexport const DELETE_GROUP_OPTIMISTIC = \"DELETE_GROUP_OPTIMISTIC\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInput = ({ name, label, onChange, placeholder, value, error }) => {\r\n  let wrapperClass = \"form-group\";\r\n  if (error && error.length > 0) {\r\n    wrapperClass += \" \" + \"has-error\";\r\n  }\r\n\r\n  return (\r\n    <div className={wrapperClass}>\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"field\">\r\n        <input\r\n          type=\"text\"\r\n          name={name}\r\n          className=\"form-control\"\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport TextInput from \"../common/TextInput\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst CardForm = ({\r\n    card,\r\n    onSave,\r\n    onChange,\r\n    saving = false,\r\n    errors = {}\r\n}) => {\r\n\r\n    const [startDate, setStartDate] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        // setStartDate({ startDate })\r\n        card.expireDate = startDate;\r\n    }, [startDate]);\r\n\r\n    return (\r\n        <form className=\"dashboard-wrapper\" onSubmit={onSave}  >\r\n            <div className=\"container-fluid dashboard-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">{card.id ? \"Edit\" : \"Add\"} Card</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {errors.onSave && (\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {errors.onSave}\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"name\"\r\n                                    label=\"Title\"\r\n                                    value={card.name}\r\n                                    onChange={onChange}\r\n                                    error={errors.name}\r\n                                    placeholder={\"Title\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    value={card.description}\r\n                                    onChange={onChange}\r\n                                    error={errors.description}\r\n                                    placeholder={\"Description\"}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"url\"\r\n                                    label=\"URL\"\r\n                                    value={card.url}\r\n                                    onChange={onChange}\r\n                                    error={errors.url}\r\n                                    placeholder={\"URL\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"iconSelect\" className=\"col-form-label text-nowrap\">Display icon</label>\r\n                                <select id=\"iconSelect\" className=\"form-control\">\r\n                                    <option value=\"bookmark\">bookmark</option>\r\n                                    <option value=\"bank\">bank</option>\r\n                                    <option value=\"bullseye\">bullseye</option>\r\n                                    <option value=\"cicle\">cicle</option>\r\n                                    <option value=\"eur\">eur</option>\r\n                                    <option value=\"money\">money</option>\r\n                                    <option value=\"github\">github</option>\r\n                                    <option value=\"windows\">windows</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"groupBySelect\" className=\"col-form-label text-nowrap\">Expire Date</label>\r\n                                <div style={{ marginTop: 0 }} >\r\n                                    <DatePicker\r\n                                        selected={startDate}\r\n                                        onChange={date => setStartDate(date)}\r\n                                        dateFormat=\"dd-MMM-yyyy\"\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" disabled={saving} className=\"btn btn-primary\">\r\n                            {saving ? \"Saving...\" : \"Save\"}\r\n                        </button>\r\n\r\n                    </div> </div> </div>  </form >\r\n    );\r\n};\r\n\r\nCardForm.propTypes = {\r\n    card: PropTypes.object.isRequired,\r\n    errors: PropTypes.object,\r\n    onSave: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    saving: PropTypes.bool,\r\n\r\n};\r\n\r\nexport default CardForm;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes, { number, string } from \"prop-types\";\r\nimport { loadCards, saveCard } from \"../../redux/actions/cardActions\";\r\nimport CardForm from \"./CardForm\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst newCard = {\r\n    id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    url: \"\",\r\n    expireDate: \"\",\r\n\r\n}\r\n\r\n\r\nfunction ManageCardPage({\r\n    cards,\r\n    loadCards,\r\n    saveCard,\r\n    history,\r\n    ...props }) {\r\n    const [card, setCard] = useState({ ...props.card });\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (cards.length === 0) {\r\n            loadCards().catch(error => {\r\n                alert(\"Loading card failed\" + error);\r\n            });\r\n        } else {\r\n            setCard({ ...props.card })\r\n        }\r\n\r\n\r\n    }, [props.card]);\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        setCard(prevCard => ({\r\n            ...prevCard,\r\n            [name]: value\r\n        }));\r\n    }\r\n    function formIsValid() {\r\n        const { name, description, url } = card;\r\n\r\n        const errors = {};\r\n\r\n        if (!name) errors.name = \"Title is required.\";\r\n        if (!description) errors.description = \"Description is required\";\r\n        if (!url) errors.url = \"URL is required\";\r\n\r\n        setErrors(errors);\r\n        // Form is valid if the errors object still has no properties\r\n        return Object.keys(errors).length === 0;\r\n    }\r\n\r\n    function handleSave(event) {\r\n\r\n        event.preventDefault();\r\n        if (!formIsValid()) return;\r\n        setSaving(true);\r\n        saveCard(card).then(() => {\r\n            toast.success(\"Card saved.\");\r\n            history.push(\"/cards\");\r\n        }).catch(error => {\r\n            setSaving(false);\r\n            setErrors({ onSave: error.message });\r\n        });\r\n    }\r\n\r\n\r\n    return cards.length === 0 ? (\r\n        <Spinner />\r\n    ) : (\r\n            <CardForm\r\n                card={card}\r\n                errors={errors}\r\n                onChange={handleChange}\r\n                onSave={handleSave}\r\n                saving={saving}\r\n            />\r\n        )\r\n}\r\n\r\nManageCardPage.propTypes = {\r\n    card: PropTypes.object.isRequired,\r\n    cards: PropTypes.array.isRequired,\r\n    loadCards: PropTypes.func.isRequired,\r\n    saveCard: PropTypes.func.isRequired,\r\n    history: PropTypes.object.isRequired\r\n}\r\n\r\nexport function getCardById(cards, id) {\r\n    return cards.find(card => card.id === id) || null;\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const id = ownProps.match.params.id;\r\n    const card =\r\n        id && state.cards.length > 0\r\n            ? getCardById(state.cards, id)\r\n            : newCard;\r\n    return {\r\n        card,\r\n        cards: state.cards,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCards,\r\n    saveCard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageCardPage);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CardList = ({ cards, onDeleteClick }) => (\r\n\t<div className=\"card\">\r\n\t\t< table className=\"table table-hover\" >\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{/* <th>Id</th> */}\r\n\t\t\t\t\t<th>Title</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Expire date</th>\r\n\t\t\t\t\t<th />\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{cards.map((card) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={card.id}>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{card.name}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>{card.description}</td>\r\n\t\t\t\t\t\t\t<td>{card.expireDate}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<Link to={\"/card/\" + card.id} className=\"btn btn-outline-primary\">Edit</Link>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</table >\r\n\t</div>\r\n);\r\n\r\nCardList.prototype = {\r\n\tcards: PropTypes.array.isRequired,\r\n\tonDeleteClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CardList;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from \"prop-types\";\r\nimport * as cardActions from \"../../redux/actions/cardActions\";\r\nimport CardList from \"./CardList\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass CardPage extends Component {\r\n\r\n    state = {\r\n        redirectToAddCardPage: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { cards, actions } = this.props;\r\n        if (cards.length === 0) {\r\n            actions.loadCards().catch(error => {\r\n                alert(\"Loading Cards failed\" + error);\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDeleteCard = async card => {\r\n        toast.success(\"Card deleted\");\r\n        try {\r\n            await this.props.actions.deleteCard(card);\r\n        } catch (error) {\r\n            toast.error(\"Delete failed. \" + error.message, { autoClose: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"dashboard-wrapper\">\r\n                <div className=\"container-fluid dashboard-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">Cards </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {this.state.redirectToAddCardPage && <Redirect to=\"/card\"></Redirect>}\r\n\r\n                            {this.props.loading ?\r\n                                <Spinner /> : (\r\n                                    <> <button\r\n                                        style={{ marginBottom: 20 }}\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={() => this.setState({ redirectToAddCardPage: true })}\r\n                                    >Add Card</button>\r\n                                        <CardList onDeleteClick={this.handleDeleteCard} cards={this.props.cards} />\r\n                                    </>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCardPage.propTypes = {\r\n    cards: PropTypes.array.isRequired,\r\n    actions: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cards: state.cards,\r\n        loading: state.apiCallsInProgress > 0\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: {\r\n            loadCards: bindActionCreators(cardActions.loadCards, dispatch),\r\n            deleteCard: bindActionCreators(cardActions.deleteCard, dispatch)\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardPage);","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/groups/\";\r\n\r\nexport function getGroups() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveGroup(group) {\r\n  return fetch(baseUrl + (group.id || \"\"), {\r\n    method: group.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(group)\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteGroup(groupId) {\r\n  return fetch(baseUrl + groupId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport * as groupApi from \"../../api/groupApi\";\r\nimport { beginApiCall, apiCallError } from \"./apiStatusActions\";\r\n\r\nexport function loadGroupSuccess(groups) {\r\n    return { type: types.LOAD_GROUPS_SUCCESS, groups }\r\n}\r\n\r\nexport function createGroupSuccess(group) {\r\n    return { type: types.CREATE_GROUP_SUCCESS, group };\r\n}\r\n\r\nexport function updateGroupSuccess(group) {\r\n    return { type: types.UPDATE_GROUP_SUCCESS, group };\r\n}\r\n\r\nexport function deleteGroupOptimistic(group) {\r\n    return { type: types.DELETE_GROUP_OPTIMISTIC, group };\r\n}\r\n\r\nexport function loadGroups() {\r\n    return function (dispatch) {\r\n        dispatch(beginApiCall());\r\n        return groupApi\r\n            .getGroups()\r\n            .then(groups => {\r\n                dispatch(loadGroupSuccess(groups));\r\n            })\r\n            .catch(error => {\r\n                dispatch(apiCallError(error));\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n\r\nexport function saveGroup(group) {\r\n    //eslint-disable-next-line no-unused-vars\r\n    return function (dispatch, getState) {\r\n        dispatch(beginApiCall());\r\n        return groupApi\r\n            .saveGroup(group)\r\n            .then(savedGroup => {\r\n                group.id\r\n                    ? dispatch(updateGroupSuccess(savedGroup))\r\n                    : dispatch(createGroupSuccess(savedGroup));\r\n            })\r\n            .catch(error => {\r\n                dispatch(apiCallError(error));\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n\r\n\r\nexport function deleteGroup(group) {\r\n    return function (dispatch) {\r\n        // Doing optimistic delete, so not dispatching begin/end api call\r\n        // actions, or apiCallError action since we're not showing the loading status for this.\r\n        dispatch(deleteGroupOptimistic(group));\r\n        return groupApi.deleteGroup(group.id);\r\n    };\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GroupList = ({ groups, onDeleteClick }) => (\r\n\r\n\t<div className=\"card\">\r\n\t\t< table className=\"table table-hover\" >\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Group name</th>\r\n\t\t\t\t\t<th>Group description</th>\r\n\t\t\t\t\t<th>Status</th>\r\n\t\t\t\t\t<th />\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{groups.map((group) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={group.id}>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{group.name}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>{group.description}</td>\r\n\t\t\t\t\t\t\t<td>{group.isActive ? \"Active\" : \"Not active\"}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<Link to={\"/group/\" + group.id} className=\"btn btn-outline-primary\">Edit</Link>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t</div>\r\n);\r\n\r\nGroupList.prototype = {\r\n\tgroups: PropTypes.array.isRequired,\r\n\tonDeleteClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupList;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from \"prop-types\";\r\nimport * as groupActions from \"../../redux/actions/groupActions\";\r\nimport * as cardActions from \"../../redux/actions/cardActions\";\r\nimport GroupList from \"./GroupList\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass GroupsPage extends Component {\r\n\r\n    state = {\r\n        redirectToAddGroupPage: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { groups, actions } = this.props;\r\n\r\n        if (groups.length === 0) {\r\n            actions.loadGroups().catch(error => {\r\n                alert(\"Loading groups failed\" + error);\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleDeleteGroup = async group => {\r\n        toast.success(\"Group deleted\");\r\n        try {\r\n            await this.props.actions.deleteGroup(group);\r\n        } catch (error) {\r\n            toast.error(\"Delete failed. \" + error.message, { autoClose: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard-wrapper\">\r\n                <div className=\"container-fluid dashboard-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                    <div className=\"page-header\" id=\"top\">\r\n                                        <h2 className=\"pageheader-title\">Groups </h2>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.redirectToAddGroupPage && <Redirect to=\"/group\"></Redirect>}\r\n\r\n                            {this.props.loading ?\r\n                                <Spinner /> : (\r\n                                    <> <button\r\n                                        style={{ marginBottom: 20 }}\r\n                                        className=\"btn btn-primary add-group\"\r\n                                        onClick={() => this.setState({ redirectToAddGroupPage: true })}>Add Group</button>\r\n\r\n                                        <GroupList onDeleteClick={this.handleDeleteGroup} groups={this.props.groups} />\r\n                                    </>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupsPage.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    actions: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groups:\r\n            state.cards.length === 0\r\n                ? []\r\n                : state.groups.map(group => {\r\n                    return {\r\n                        ...group,\r\n                        cardSelected: state.cards.find(a => a.id === group.id)\r\n                    }\r\n                }),\r\n        cards: state.cards,\r\n        loading: state.apiCallsInProgress > 0\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: {\r\n            loadGroups: bindActionCreators(groupActions.loadGroups, dispatch),\r\n            loadCards: bindActionCreators(cardActions.loadCards, dispatch),\r\n            deleteGroup: bindActionCreators(groupActions.deleteGroup, dispatch)\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupsPage);","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport TextInput from \"../common/TextInput\";\r\nimport SelectInput from \"../common/SelectInput\";\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nconst GroupForm = ({\r\n    group,\r\n    cards,\r\n    onSave,\r\n    onChange,\r\n    saving = false,\r\n    errors = {}\r\n}) => {\r\n\r\n    const [options, setoptions] = useState([{ name: 'Srigar', id: 1 }, { name: 'Sam', id: 2 }]);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     // setStartDate({ startDate })\r\n    //     card.expireDate = startDate;\r\n    // }, [startDate]);\r\n\r\n    function onSelect(event) {\r\n        const id = event.map(x => x.id)\r\n\r\n        group.cards = id;\r\n    }\r\n\r\n    function onRemove(event) {\r\n        const { name, value } = event.target;\r\n        setoptions(prevGroup => ({\r\n            ...prevGroup,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        // group.isActive = event.target.checked\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        const name = target.name;\r\n\r\n        // this.setState({\r\n        //   [name]: value\r\n        // });\r\n    }\r\n    return (\r\n        <form className=\"dashboard-wrapper\" onSubmit={onSave}  >\r\n            <div className=\"container-fluid dashboard-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">{group.id ? \"Edit\" : \"Add\"} Group</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {errors.onSave && (\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {errors.onSave}\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"name\"\r\n                                    label=\"Name\"\r\n                                    value={group.name}\r\n                                    onChange={onChange}\r\n                                    error={errors.name}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <TextInput\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    value={group.description}\r\n                                    onChange={onChange}\r\n                                    error={errors.description}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"iconSelect\" className=\"col-form-label text-nowrap\"\r\n                                    style={{ paddingTop: 0 }}\r\n                                >Map card</label>\r\n                                <Multiselect id=\"iconSelect\"\r\n                                    options={cards} // Options to display in the dropdown\r\n                                    selectedValues={group.cardSelected} // Preselected value to persist in dropdown\r\n                                    onSelect={onSelect} // Function will trigger on select event\r\n                                    // onRemove={onRemove} // Function will trigger on remove event\r\n                                    displayValue=\"name\" // Property name to display in the dropdown options\r\n                                    showCheckbox={true}\r\n                                    closeIcon=\"close\"\r\n                                    closeOnSelect={false}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <input type=\"checkbox\"\r\n                                    name=\"isActive\"\r\n                                    value={group.isActive}\r\n                                    id=\"isActive\"\r\n                                    checked={true}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                                <label className=\"form-check-label\" htmlFor=\"isActive\">\r\n                                    &nbsp;&nbsp;Active\r\n                    </label>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" disabled={saving} className=\"btn btn-primary\">\r\n                            {saving ? \"Saving...\" : \"Save\"}\r\n                        </button>\r\n                    </div> </div> </div>  </form >\r\n    );\r\n};\r\n\r\nGroupForm.propTypes = {\r\n    group: PropTypes.object.isRequired,\r\n    errors: PropTypes.object,\r\n    onSave: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    saving: PropTypes.bool\r\n};\r\n\r\nexport default GroupForm;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes, { bool } from \"prop-types\";\r\nimport { loadGroups, saveGroup } from \"../../redux/actions/groupActions\";\r\nimport { loadCards } from \"../../redux/actions/cardActions\";\r\nimport GroupForm from \"./GroupForm\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst newGroup = {\r\n    id: null,\r\n    description: \"\",\r\n\r\n    name: \"\",\r\n    isActive: true,\r\n    cardSelected: []\r\n};\r\n\r\nfunction ManageGroupPage({\r\n    groups,\r\n    cards,\r\n    loadCards,\r\n    loadGroups,\r\n    saveGroup,\r\n    history,\r\n    ...props }) {\r\n    const [group, setGroup] = useState({ ...props.group });\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if (groups.length === 0) {\r\n            loadGroups().catch(error => {\r\n                alert(\"Loading groups failed\" + error);\r\n            });\r\n        } else {\r\n            setGroup({ ...props.group })\r\n        }\r\n\r\n        if (cards.length === 0) {\r\n            loadCards().catch(error => {\r\n                alert(\"Loading cards failed\" + error);\r\n            });\r\n        }\r\n    }, [props.group]);\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        setGroup(prevGroup => ({\r\n            ...prevGroup,\r\n            [name]: value\r\n        }));\r\n    }\r\n    function formIsValid() {\r\n        const { name, description } = group;\r\n        const errors = {};\r\n\r\n        if (!name) errors.name = \"Group name is required.\";\r\n        if (!description) errors.description = \"Group description is required\";\r\n\r\n        setErrors(errors);\r\n        // Form is valid if the errors object still has no properties\r\n        return Object.keys(errors).length === 0;\r\n    }\r\n\r\n    function handleSave(event) {\r\n        event.preventDefault();\r\n        if (!formIsValid()) return;\r\n        setSaving(true);\r\n        saveGroup(group).then(() => {\r\n            toast.success(\"Group saved.\");\r\n            history.push(\"/groups\");\r\n        }).catch(error => {\r\n            setSaving(false);\r\n            setErrors({ onSave: error.message });\r\n        });\r\n    }\r\n    return cards.length === 0 || groups.length === 0 ? (\r\n        <Spinner />\r\n    ) : (\r\n            <>\r\n                <GroupForm\r\n                    group={group}\r\n                    errors={errors}\r\n                    cards={cards}\r\n                    onChange={handleChange}\r\n                    onSave={handleSave}\r\n                    saving={saving}\r\n                />\r\n            </>\r\n        )\r\n}\r\n\r\nManageGroupPage.propTypes = {\r\n    group: PropTypes.object.isRequired,\r\n    cards: PropTypes.array.isRequired,\r\n    groups: PropTypes.array.isRequired,\r\n    loadGroups: PropTypes.func.isRequired,\r\n    loadCards: PropTypes.func.isRequired,\r\n    saveGroup: PropTypes.func.isRequired,\r\n    history: PropTypes.object.isRequired\r\n}\r\n\r\nexport function getGroupBySlug(groups, id) {\r\n    return groups.find(group => group.id === id) || null;\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const id = ownProps.match.params.id;\r\n    const group =\r\n        id && state.groups.length > 0\r\n            ? getGroupBySlug(state.groups, id)\r\n            : newGroup;\r\n    return {\r\n        group,\r\n        groups: state.groups,\r\n        cards: state.cards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadGroups,\r\n    loadCards,\r\n    saveGroup\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageGroupPage);\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { useParams } from \"react-router-dom\";\r\nimport data from \"../bg-data.json\";\r\n\r\nconst CardView = () => {\r\n\r\n    const [items, setItems] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        let d = data;\r\n       \r\n        setItems(d.cards.filter(x => x.id === +id)[0]);\r\n    \r\n\r\n        // fetch('data/db.json')\r\n        // .then((r) => r.json())\r\n        // .then((data) => {\r\n        //     console.log(data);\r\n        //     debugger;\r\n        //     // data.cards.filter(x=>x.verse ===\"3\")\r\n        //     setItems(data.cards)\r\n\r\n        // })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"dashboard-wrapper\">\r\n            <div className=\"container-fluid dashboard-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title\">&nbsp; </h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h2 className=\"pageheader-title text-center\">{items.name}</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                            <div className=\"col-xl-6  col-sm-6  col-lg-6 col-md-6 col-6 text-center\">\r\n                                <h3 className=\"text-center\">{items.description}</h3>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h3 className=\"pageheader-title text-center\"> <u> Synonyms</u></h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                            <div className=\"col-xl-6  col-sm-6  col-lg-6 col-md-6 col-6 text-center\">\r\n                                <h3 className=\"text-center\">{items.synonmys}</h3>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                <div className=\"page-header\" id=\"top\">\r\n                                    <h3 className=\"pageheader-title text-center\"> <u> Meaning</u></h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                            <div className=\"col-xl-6  col-sm-6  col-lg-6 col-md-6 col-6 text-center\">\r\n                                <h3 className=\"text-center\">{items.meaning}</h3>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                                <h3 className=\"text-center\"> &nbsp; </h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 text-right\">\r\n\r\n                            </div>\r\n                            <div className=\"col-xl-6  col-sm-6  col-lg-6 col-md-6 col-6 text-center\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Previous\r\n                                </button> <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Next\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CardView;\r\n","import React, { Component } from 'react'\r\n\r\nclass Callback extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n        if (/access_token|id_token|error/.test(this.props.location.hash)) {\r\n            this.props.auth.handleAuthentication();\r\n        }\r\n        else {\r\n            // throw new Error(\"Invalid callback URL\")\r\n            console.log(\"Invalid callback URL\")\r\n            // alert(\"Invalid callback URL\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Loading...</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Callback;","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./home/HomePage\";\r\nimport AboutPage from \"./about/AboutPage\";\r\nimport Header from \"./common/Header\";\r\nimport Footer from \"./common/Footer\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport ManageCardPage from './cards/ManageCardPage';\r\nimport CardPage from \"./cards/CardPage\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport GroupsPage from \"./groups/GroupsPage\";\r\nimport ManageGroupPage from './groups/ManageGroupPage';\r\nimport CardView from \"./cardview/cardview\";\r\n// import AuthContext from \"./AuthContext\";\r\n// import Auth from './auth/Auth';\r\nimport Callback from './Callback';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // auth: new Auth(this.props.history),\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    // const { auth } = this.state;\r\n    return (\r\n\r\n      <div className=\"dashboard-header \">\r\n        <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            {/* <Route exact path=\"/home\" component={HomePage} /> */}\r\n            <Route path=\"/callback\" render={props => <Callback   {...props} />} />\r\n            <Route exact path=\"/about\" component={AboutPage} />\r\n            <Route exact path=\"/groups\" component={GroupsPage} />\r\n            <Route exact path=\"/group/:id\" component={ManageGroupPage} />\r\n            <Route exact path=\"/group\" component={ManageGroupPage} />\r\n            <Route exact path=\"/cards\" component={CardPage} />\r\n            <Route exact path=\"/card/:id\" component={ManageCardPage} />\r\n            <Route exact path=\"/card\" component={ManageCardPage} />\r\n            <Route exact path=\"/cardview/:id\" component={CardView} />\r\n            <Route exact component={PageNotFound} />\r\n          </Switch>\r\n        <Footer />\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default {\r\n\r\n    groups: [],\r\n\r\n    cards: [],\r\n    apiCallsInProgress: 0\r\n}","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nfunction actionTypeEndsInSuccess(type) {\r\n    return type.substring(type.length - 8) === \"_SUCCESS\";\r\n}\r\n\r\nexport default function apiCallStatusReducer(\r\n    state = initialState.apiCallsInProgress,\r\n    action\r\n) {\r\n    if (action.type === types.BEGIN_API_CALL) {\r\n        return state + 1;\r\n    } else if (\r\n        action.type === types.API_CALL_ERROR ||\r\n        actionTypeEndsInSuccess(action.type)\r\n    ) {\r\n        return state - 1;\r\n    }\r\n\r\n    return state;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cards from \"./cardReducer\";\r\nimport groups from \"./groupReducer\";\r\nimport apiCallsInProgress from \"./apiStatusReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    groups,\r\n    cards,\r\n    apiCallsInProgress\r\n});\r\n\r\nexport default rootReducer;","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function groupReducer(state = initialState.groups, action) {\r\n    switch (action.type) {\r\n        case types.CREATE_GROUP_SUCCESS:\r\n            return [...state, { ...action.group }];\r\n        case types.UPDATE_GROUP_SUCCESS:\r\n            return state.map(group =>\r\n                group.id === action.group.id ? action.group : group)\r\n        case types.LOAD_GROUPS_SUCCESS:\r\n            return action.groups;\r\n        case types.DELETE_GROUP_OPTIMISTIC:\r\n            return state.filter(group => group.id !== action.group.id);\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function cardReducer(state = initialState.cards, action) {\r\n    switch (action.type) {\r\n        case types.CREATE_CARD_SUCCESS:\r\n            return [...state, { ...action.card }];\r\n        case types.UPDATE_CARD_SUCCESS:\r\n            return state.map(card =>\r\n                card.id === action.card.id ? action.card : card)\r\n        case types.LOAD_CARDS_SUCCESS:\r\n            return action.cards;\r\n        case types.DELETE_CARD_OPTIMISTIC:\r\n            return state.filter(card => card.id !== action.card.id);\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/style.css\";\r\nimport \"./css/circular-std/style.css\";\r\n// import \"./css/fontawesome/css/fontawesome-all.css\";\r\nimport configureStore from \"./redux/configureStore\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ReduxProvider store={store} >\r\n      <Router>\r\n        <Route component={App} />\r\n      </Router>\r\n    </ReduxProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore(initialState) {\r\n    const composeEnhancers =\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n    );\r\n}","module.exports = __webpack_public_path__ + \"static/media/card-img.8d4ab8ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo3.42e252b2.png\";"],"sourceRoot":""}